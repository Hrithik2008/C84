{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar customFonts = {\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\n};\n\nvar StoryCard = function (_Component) {\n  _inherits(StoryCard, _Component);\n\n  var _super = _createSuper(StoryCard);\n\n  function StoryCard(props) {\n    var _this;\n\n    _classCallCheck(this, StoryCard);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      fontsLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(StoryCard, [{\n    key: \"_loadFontsAsync\",\n    value: function _loadFontsAsync() {\n      return _regeneratorRuntime.async(function _loadFontsAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync(customFonts));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._loadFontsAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.fontsLoaded) {\n        return _jsx(AppLoading, {});\n      } else {\n        return _jsx(TouchableOpacity, {\n          style: styles.container,\n          onPress: function onPress() {\n            return _this2.props.navigation.navigate(\"StoryScreen\", {\n              story: _this2.props.story\n            });\n          },\n          children: _jsxs(View, {\n            style: styles.cardContainer,\n            children: [_jsx(Image, {\n              source: require(\"../assets/story_image_1.png\"),\n              style: styles.storyImage\n            }), _jsxs(View, {\n              style: styles.titleContainer,\n              children: [_jsx(Text, {\n                style: styles.storyTitleText,\n                children: this.props.story.title\n              }), _jsx(Text, {\n                style: styles.storyAuthorText,\n                children: this.props.story.author\n              }), _jsx(Text, {\n                style: styles.descriptionText,\n                children: this.props.story.description\n              })]\n            }), _jsx(View, {\n              style: styles.actionContainer,\n              children: _jsxs(View, {\n                style: styles.likeButton,\n                children: [_jsx(Ionicons, {\n                  name: \"heart\",\n                  size: RFValue(30),\n                  color: \"white\"\n                }), _jsx(Text, {\n                  style: styles.likeText,\n                  children: \"12k\"\n                })]\n              })\n            })]\n          })\n        });\n      }\n    }\n  }]);\n\n  return StoryCard;\n}(Component);\n\nexport { StoryCard as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  cardContainer: {\n    margin: RFValue(13),\n    backgroundColor: \"#2f345d\",\n    borderRadius: RFValue(20)\n  },\n  storyImage: {\n    resizeMode: \"contain\",\n    width: \"95%\",\n    alignSelf: \"center\",\n    height: RFValue(250)\n  },\n  titleContainer: {\n    paddingLeft: RFValue(20),\n    justifyContent: \"center\"\n  },\n  storyTitleText: {\n    fontSize: RFValue(25),\n    fontFamily: \"Bubblegum-Sans\",\n    color: \"white\"\n  },\n  storyAuthorText: {\n    fontSize: RFValue(18),\n    fontFamily: \"Bubblegum-Sans\",\n    color: \"white\"\n  },\n  descriptionText: {\n    fontFamily: \"Bubblegum-Sans\",\n    fontSize: 13,\n    color: \"white\",\n    paddingTop: RFValue(10)\n  },\n  actionContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: RFValue(10)\n  },\n  likeButton: {\n    width: RFValue(160),\n    height: RFValue(40),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    backgroundColor: \"#eb3948\",\n    borderRadius: RFValue(30)\n  },\n  likeText: {\n    color: \"white\",\n    fontFamily: \"Bubblegum-Sans\",\n    fontSize: RFValue(25),\n    marginLeft: RFValue(5)\n  }\n});","map":{"version":3,"sources":["C:/Users/Hrithik/Documents/ST-84-Boilerplate/screens/StoryCard.js"],"names":["React","Component","Ionicons","RFValue","AppLoading","Font","customFonts","require","StoryCard","props","state","fontsLoaded","loadAsync","setState","_loadFontsAsync","styles","container","navigation","navigate","story","cardContainer","storyImage","titleContainer","storyTitleText","title","storyAuthorText","author","descriptionText","description","actionContainer","likeButton","likeText","StyleSheet","create","flex","margin","backgroundColor","borderRadius","resizeMode","width","alignSelf","height","paddingLeft","justifyContent","fontSize","fontFamily","color","paddingTop","alignItems","padding","flexDirection","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Platform,\r\n  StatusBar,\r\n  Image,\r\n  Dimensions,\r\n  TouchableOpacity\r\n} from \"react-native\";\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport * as Font from \"expo-font\";\r\n\r\nlet customFonts = {\r\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\r\n};\r\n\r\nexport default class StoryCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fontsLoaded: false\r\n    };\r\n  }\r\n\r\n  async _loadFontsAsync() {\r\n    await Font.loadAsync(customFonts);\r\n    this.setState({ fontsLoaded: true });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._loadFontsAsync();\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.fontsLoaded) {\r\n      return <AppLoading />;\r\n    } else {\r\n      return (\r\n        <TouchableOpacity\r\n          style={styles.container}\r\n          onPress={() =>\r\n            this.props.navigation.navigate(\"StoryScreen\", {\r\n              story: this.props.story\r\n            })\r\n          }\r\n        >\r\n          <View style={styles.cardContainer}>\r\n            <Image\r\n              source={require(\"../assets/story_image_1.png\")}\r\n              style={styles.storyImage}\r\n            ></Image>\r\n\r\n            <View style={styles.titleContainer}>\r\n              <Text style={styles.storyTitleText}>\r\n                {this.props.story.title}\r\n              </Text>\r\n              <Text style={styles.storyAuthorText}>\r\n                {this.props.story.author}\r\n              </Text>\r\n              <Text style={styles.descriptionText}>\r\n                {this.props.story.description}\r\n              </Text>\r\n            </View>\r\n            <View style={styles.actionContainer}>\r\n              <View style={styles.likeButton}>\r\n                <Ionicons name={\"heart\"} size={RFValue(30)} color={\"white\"} />\r\n                <Text style={styles.likeText}>12k</Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1\r\n  },\r\n  cardContainer: {\r\n    margin: RFValue(13),\r\n    backgroundColor: \"#2f345d\",\r\n    borderRadius: RFValue(20)\r\n  },\r\n  storyImage: {\r\n    resizeMode: \"contain\",\r\n    width: \"95%\",\r\n    alignSelf: \"center\",\r\n    height: RFValue(250)\r\n  },\r\n  titleContainer: {\r\n    paddingLeft: RFValue(20),\r\n    justifyContent: \"center\"\r\n  },\r\n  storyTitleText: {\r\n    fontSize: RFValue(25),\r\n    fontFamily: \"Bubblegum-Sans\",\r\n    color: \"white\"\r\n  },\r\n  storyAuthorText: {\r\n    fontSize: RFValue(18),\r\n    fontFamily: \"Bubblegum-Sans\",\r\n    color: \"white\"\r\n  },\r\n  descriptionText: {\r\n    fontFamily: \"Bubblegum-Sans\",\r\n    fontSize: 13,\r\n    color: \"white\",\r\n    paddingTop: RFValue(10)\r\n  },\r\n  actionContainer: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: RFValue(10)\r\n  },\r\n  likeButton: {\r\n    width: RFValue(160),\r\n    height: RFValue(40),\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#eb3948\",\r\n    borderRadius: RFValue(30)\r\n  },\r\n  likeText: {\r\n    color: \"white\",\r\n    fontFamily: \"Bubblegum-Sans\",\r\n    fontSize: RFValue(25),\r\n    marginLeft: RFValue(5)\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}