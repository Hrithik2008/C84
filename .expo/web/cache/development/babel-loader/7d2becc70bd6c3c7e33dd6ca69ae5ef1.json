{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar customFonts = {\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\n};\n\nvar CreateStory = function (_Component) {\n  _inherits(CreateStory, _Component);\n\n  var _super = _createSuper(CreateStory);\n\n  function CreateStory(props) {\n    var _this;\n\n    _classCallCheck(this, CreateStory);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      fontsLoaded: false,\n      previewImage: \"image_1\",\n      dropdownHeight: 40\n    };\n    return _this;\n  }\n\n  _createClass(CreateStory, [{\n    key: \"_loadFontsAsync\",\n    value: function _loadFontsAsync() {\n      return _regeneratorRuntime.async(function _loadFontsAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync(customFonts));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._loadFontsAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.fontsLoaded) {\n        return _jsx(AppLoading, {});\n      } else {\n        var preview_images = {\n          image_1: require(\"../assets/story_image_1.png\"),\n          image_2: require(\"../assets/story_image_2.png\"),\n          image_3: require(\"../assets/story_image_3.png\"),\n          image_4: require(\"../assets/story_image_4.png\"),\n          image_5: require(\"../assets/story_image_5.png\")\n        };\n        return _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(SafeAreaView, {\n            style: styles.droidSafeArea\n          }), _jsxs(View, {\n            style: styles.appTitle,\n            children: [_jsx(View, {\n              style: styles.appIcon,\n              children: _jsx(Image, {\n                source: require(\"../assets/logo.png\"),\n                style: styles.iconImage\n              })\n            }), _jsx(View, {\n              style: styles.appTitleTextContainer,\n              children: _jsx(Text, {\n                style: styles.appTitleText,\n                children: \"New Story\"\n              })\n            })]\n          }), _jsxs(View, {\n            style: styles.fieldsContainer,\n            children: [_jsx(Image, {\n              source: preview_images[this.state.previewImage],\n              style: styles.previewImage\n            }), _jsx(View, {\n              style: {\n                height: RFValue(this.state.dropdownHeight)\n              },\n              children: _jsx(DropDownPicker, {\n                items: [{\n                  label: \"Image 1\",\n                  value: \"image_1\"\n                }, {\n                  label: \"Image 2\",\n                  value: \"image_2\"\n                }, {\n                  label: \"Image 3\",\n                  value: \"image_3\"\n                }, {\n                  label: \"Image 4\",\n                  value: \"image_4\"\n                }, {\n                  label: \"Image 5\",\n                  value: \"image_5\"\n                }],\n                defaultValue: this.state.previewImage,\n                open: this.state.dropdownHeight == 170 ? true : false,\n                onOpen: function onOpen() {\n                  _this2.setState({\n                    dropdownHeight: 170\n                  });\n                },\n                onClose: function onClose() {\n                  _this2.setState({\n                    dropdownHeight: 40\n                  });\n                },\n                style: {\n                  backgroundColor: \"transparent\",\n                  borderWidth: 1,\n                  borderColor: \"white\"\n                },\n                textStyle: {\n                  color: this.state.dropdownHeight == 170 ? \"black\" : \"white\",\n                  fontFamily: \"Bubblegum-Sans\"\n                },\n                onSelectItem: function onSelectItem(item) {\n                  return _this2.setState({\n                    previewImage: item.value\n                  });\n                }\n              })\n            }), _jsxs(ScrollView, {\n              children: [_jsx(TextInput, {\n                style: styles.inputFont,\n                onChangeText: function onChangeText(title) {\n                  return _this2.setState({\n                    title: title\n                  });\n                },\n                placeholder: \"Title\",\n                placeholderTextColor: \"white\"\n              }), _jsx(TextInput, {\n                style: [styles.inputFont, styles.inputFontExtra, styles.inputTextBig],\n                onChangeText: function onChangeText(description) {\n                  return _this2.setState({\n                    description: description\n                  });\n                },\n                placeholder: \"Description\",\n                multiline: true,\n                numberOfLines: 4,\n                placeholderTextColor: \"white\"\n              }), _jsx(TextInput, {\n                style: [styles.inputFont, styles.inputFontExtra, styles.inputTextBig],\n                onChangeText: function onChangeText(story) {\n                  return _this2.setState({\n                    story: story\n                  });\n                },\n                placeholder: \"Story\",\n                multiline: true,\n                numberOfLines: 20,\n                placeholderTextColor: \"white\"\n              }), _jsx(TextInput, {\n                style: [styles.inputFont, styles.inputFontExtra, styles.inputTextBig],\n                onChangeText: function onChangeText(moral) {\n                  return _this2.setState({\n                    moral: moral\n                  });\n                },\n                placeholder: \"Moral of the story\",\n                multiline: true,\n                numberOfLines: 4,\n                placeholderTextColor: \"white\"\n              })]\n            })]\n          }), _jsx(View, {\n            style: {\n              flex: 0.08\n            }\n          })]\n        });\n      }\n    }\n  }]);\n\n  return CreateStory;\n}(Component);\n\nexport { CreateStory as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#15193c\"\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\n  },\n  appTitle: {\n    flex: 0.07,\n    flexDirection: \"row\"\n  },\n  appIcon: {\n    flex: 0.3,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  iconImage: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  appTitleTextContainer: {\n    flex: 0.7,\n    justifyContent: \"center\"\n  },\n  appTitleText: {\n    color: \"white\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  fieldsContainer: {\n    flex: 0.85\n  },\n  previewImage: {\n    width: \"93%\",\n    height: RFValue(250),\n    alignSelf: \"center\",\n    borderRadius: RFValue(10),\n    marginVertical: RFValue(10),\n    resizeMode: \"contain\"\n  },\n  inputFont: {\n    height: RFValue(40),\n    borderColor: \"white\",\n    borderWidth: RFValue(1),\n    borderRadius: RFValue(10),\n    paddingLeft: RFValue(10),\n    color: \"white\",\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  inputFontExtra: {\n    marginTop: RFValue(15)\n  },\n  inputTextBig: {\n    textAlignVertical: \"top\",\n    padding: RFValue(5)\n  }\n});","map":{"version":3,"sources":["C:/Users/Hrithik/Documents/ST-84-Boilerplate/screens/CreateStory.js"],"names":["React","Component","RFValue","DropDownPicker","AppLoading","Font","customFonts","require","CreateStory","props","state","fontsLoaded","previewImage","dropdownHeight","loadAsync","setState","_loadFontsAsync","preview_images","image_1","image_2","image_3","image_4","image_5","styles","container","droidSafeArea","appTitle","appIcon","iconImage","appTitleTextContainer","appTitleText","fieldsContainer","height","label","value","backgroundColor","borderWidth","borderColor","color","fontFamily","item","inputFont","title","inputFontExtra","inputTextBig","description","story","moral","flex","StyleSheet","create","marginTop","Platform","OS","StatusBar","currentHeight","flexDirection","justifyContent","alignItems","width","resizeMode","fontSize","alignSelf","borderRadius","marginVertical","paddingLeft","textAlignVertical","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  Platform,\r\n  StatusBar,\r\n  Image,\r\n  ScrollView,\r\n  TextInput,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\n\r\nimport AppLoading from \"expo-app-loading\";\r\nimport * as Font from \"expo-font\";\r\n\r\nlet customFonts = {\r\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\"),\r\n};\r\n\r\nexport default class CreateStory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fontsLoaded: false,\r\n      previewImage: \"image_1\",\r\n      dropdownHeight: 40,\r\n    };\r\n  }\r\n\r\n  async _loadFontsAsync() {\r\n    await Font.loadAsync(customFonts);\r\n    this.setState({ fontsLoaded: true });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._loadFontsAsync();\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.fontsLoaded) {\r\n      return <AppLoading />;\r\n    } else {\r\n      let preview_images = {\r\n        image_1: require(\"../assets/story_image_1.png\"),\r\n        image_2: require(\"../assets/story_image_2.png\"),\r\n        image_3: require(\"../assets/story_image_3.png\"),\r\n        image_4: require(\"../assets/story_image_4.png\"),\r\n        image_5: require(\"../assets/story_image_5.png\"),\r\n      };\r\n      return (\r\n        <View style={styles.container}>\r\n          <SafeAreaView style={styles.droidSafeArea} />\r\n          <View style={styles.appTitle}>\r\n            <View style={styles.appIcon}>\r\n              <Image\r\n                source={require(\"../assets/logo.png\")}\r\n                style={styles.iconImage}\r\n              ></Image>\r\n            </View>\r\n            <View style={styles.appTitleTextContainer}>\r\n              <Text style={styles.appTitleText}>New Story</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.fieldsContainer}>\r\n            \r\n              <Image\r\n                source={preview_images[this.state.previewImage]}\r\n                style={styles.previewImage}\r\n              ></Image>\r\n              <View style={{ height: RFValue(this.state.dropdownHeight) }}>\r\n                <DropDownPicker\r\n                  items={[\r\n                    { label: \"Image 1\", value: \"image_1\" },\r\n                    { label: \"Image 2\", value: \"image_2\" },\r\n                    { label: \"Image 3\", value: \"image_3\" },\r\n                    { label: \"Image 4\", value: \"image_4\" },\r\n                    { label: \"Image 5\", value: \"image_5\" },\r\n                  ]}\r\n                  defaultValue={this.state.previewImage}\r\n                  open={this.state.dropdownHeight == 170 ? true : false}\r\n                  onOpen={() => {\r\n                    this.setState({ dropdownHeight: 170 });\r\n                  }}\r\n                  onClose={() => {\r\n                    this.setState({ dropdownHeight: 40 });\r\n                  }}\r\n                  style={{\r\n                    backgroundColor: \"transparent\",\r\n                    borderWidth: 1,\r\n                    borderColor: \"white\",\r\n                  }}\r\n                  textStyle={{\r\n                    color: this.state.dropdownHeight == 170 ? \"black\" : \"white\",\r\n                    fontFamily: \"Bubblegum-Sans\",\r\n                  }}\r\n                  onSelectItem={(item) =>\r\n                    this.setState({\r\n                      previewImage: item.value,\r\n                    })\r\n                  }\r\n                />\r\n              </View>\r\n              <ScrollView>\r\n              <TextInput\r\n                style={styles.inputFont}\r\n                onChangeText={(title) => this.setState({ title })}\r\n                placeholder={\"Title\"}\r\n                placeholderTextColor=\"white\"\r\n              />\r\n\r\n              <TextInput\r\n                style={[\r\n                  styles.inputFont,\r\n                  styles.inputFontExtra,\r\n                  styles.inputTextBig,\r\n                ]}\r\n                onChangeText={(description) => this.setState({ description })}\r\n                placeholder={\"Description\"}\r\n                multiline={true}\r\n                numberOfLines={4}\r\n                placeholderTextColor=\"white\"\r\n              />\r\n              <TextInput\r\n                style={[\r\n                  styles.inputFont,\r\n                  styles.inputFontExtra,\r\n                  styles.inputTextBig,\r\n                ]}\r\n                onChangeText={(story) => this.setState({ story })}\r\n                placeholder={\"Story\"}\r\n                multiline={true}\r\n                numberOfLines={20}\r\n                placeholderTextColor=\"white\"\r\n              />\r\n\r\n              <TextInput\r\n                style={[\r\n                  styles.inputFont,\r\n                  styles.inputFontExtra,\r\n                  styles.inputTextBig,\r\n                ]}\r\n                onChangeText={(moral) => this.setState({ moral })}\r\n                placeholder={\"Moral of the story\"}\r\n                multiline={true}\r\n                numberOfLines={4}\r\n                placeholderTextColor=\"white\"\r\n              />\r\n            </ScrollView>\r\n          </View>\r\n          <View style={{ flex: 0.08 }} />\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#15193c\",\r\n  },\r\n  droidSafeArea: {\r\n    marginTop:\r\n      Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35),\r\n  },\r\n  appTitle: {\r\n    flex: 0.07,\r\n    flexDirection: \"row\",\r\n  },\r\n  appIcon: {\r\n    flex: 0.3,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  iconImage: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    resizeMode: \"contain\",\r\n  },\r\n  appTitleTextContainer: {\r\n    flex: 0.7,\r\n    justifyContent: \"center\",\r\n  },\r\n  appTitleText: {\r\n    color: \"white\",\r\n    fontSize: RFValue(28),\r\n    fontFamily: \"Bubblegum-Sans\",\r\n  },\r\n  fieldsContainer: {\r\n    flex: 0.85,\r\n  },\r\n  previewImage: {\r\n    width: \"93%\",\r\n    height: RFValue(250),\r\n    alignSelf: \"center\",\r\n    borderRadius: RFValue(10),\r\n    marginVertical: RFValue(10),\r\n    resizeMode: \"contain\",\r\n  },\r\n  inputFont: {\r\n    height: RFValue(40),\r\n    borderColor: \"white\",\r\n    borderWidth: RFValue(1),\r\n    borderRadius: RFValue(10),\r\n    paddingLeft: RFValue(10),\r\n    color: \"white\",\r\n    fontFamily: \"Bubblegum-Sans\",\r\n  },\r\n  inputFontExtra: {\r\n    marginTop: RFValue(15),\r\n  },\r\n  inputTextBig: {\r\n    textAlignVertical: \"top\",\r\n    padding: RFValue(5),\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}