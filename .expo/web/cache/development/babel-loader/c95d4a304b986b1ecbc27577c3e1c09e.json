{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport * as Speech from 'expo-speech';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar customFonts = {\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\n};\n\nvar StoryScreen = function (_Component) {\n  _inherits(StoryScreen, _Component);\n\n  var _super = _createSuper(StoryScreen);\n\n  function StoryScreen(props) {\n    var _this;\n\n    _classCallCheck(this, StoryScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      fontsLoaded: false,\n      speakerColor: \"gray\",\n      speakerIcon: \"volume-high-outline\"\n    };\n    return _this;\n  }\n\n  _createClass(StoryScreen, [{\n    key: \"_loadFontsAsync\",\n    value: function _loadFontsAsync() {\n      return _regeneratorRuntime.async(function _loadFontsAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync(customFonts));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._loadFontsAsync();\n    }\n  }, {\n    key: \"initiateTTS\",\n    value: function initiateTTS(title, author, story, moral) {\n      var current_color;\n      return _regeneratorRuntime.async(function initiateTTS$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              current_color = this.state.speakerColor;\n              this.setState({\n                speakerColor: current_color === \"gray\" ? \"tomato-red\" : \"gray\"\n              });\n\n              if (current_color === \"gray\") {\n                Speech.speak(title + \" by \" + author);\n                Speech.speak(story);\n                Speech.speak(\"\");\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.route.params) {\n        this.props.navigation.navigate(\"Home\");\n      } else if (!this.state.fontsLoaded) {\n        return _jsx(AppLoading, {});\n      } else {\n        return _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(SafeAreaView, {\n            style: styles.droidSafeArea\n          }), _jsxs(View, {\n            style: styles.appTitle,\n            children: [_jsx(View, {\n              style: styles.appIcon,\n              children: _jsx(Image, {\n                source: require(\"../assets/logo.png\"),\n                style: styles.iconImage\n              })\n            }), _jsx(View, {\n              style: styles.appTitleTextContainer,\n              children: _jsx(Text, {\n                style: styles.appTitleText,\n                children: \"Storytelling App\"\n              })\n            })]\n          }), _jsx(View, {\n            style: styles.storyContainer,\n            children: _jsxs(ScrollView, {\n              style: styles.storyCard,\n              children: [_jsx(Image, {\n                source: require(\"../assets/story_image_1.png\"),\n                style: styles.image\n              }), _jsxs(View, {\n                style: styles.dataContainer,\n                children: [_jsxs(View, {\n                  style: styles.titleTextContainer,\n                  children: [_jsx(Text, {\n                    style: styles.storyTitleText,\n                    children: this.props.route.params.story.title\n                  }), _jsx(Text, {\n                    style: styles.storyAuthorText,\n                    children: this.props.route.params.story.author\n                  }), _jsx(Text, {\n                    style: styles.storyAuthorText,\n                    children: this.props.route.params.story.created_on\n                  })]\n                }), _jsx(View, {\n                  style: styles.iconContainer,\n                  children: _jsx(TouchableOpacity, {\n                    children: _jsx(Ionicons, {\n                      name: this.state.speakerIcon,\n                      size: RFValue(30),\n                      color: this.state.speakerColor,\n                      style: {\n                        margin: RFValue(15)\n                      }\n                    })\n                  })\n                })]\n              }), _jsxs(View, {\n                style: styles.storyTextContainer,\n                children: [_jsx(Text, {\n                  style: styles.storyText,\n                  children: this.props.route.params.story.story\n                }), _jsxs(Text, {\n                  style: styles.moralText,\n                  children: [\"Moral - \", this.props.route.params.story.moral]\n                })]\n              }), _jsx(View, {\n                style: styles.actionContainer,\n                children: _jsxs(View, {\n                  style: styles.likeButton,\n                  children: [_jsx(Ionicons, {\n                    name: \"heart\",\n                    size: RFValue(30),\n                    color: \"white\"\n                  }), _jsx(Text, {\n                    style: styles.likeText,\n                    children: \"12k\"\n                  })]\n                })\n              })]\n            })\n          })]\n        });\n      }\n    }\n  }]);\n\n  return StoryScreen;\n}(Component);\n\nexport { StoryScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#15193c\"\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\n  },\n  appTitle: {\n    flex: 0.07,\n    flexDirection: \"row\"\n  },\n  appIcon: {\n    flex: 0.3,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  iconImage: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  appTitleTextContainer: {\n    flex: 0.7,\n    justifyContent: \"center\"\n  },\n  appTitleText: {\n    color: \"white\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  storyContainer: {\n    flex: 1\n  },\n  storyCard: {\n    margin: RFValue(20),\n    backgroundColor: \"#2f345d\",\n    borderRadius: RFValue(20)\n  },\n  image: {\n    width: \"100%\",\n    alignSelf: \"center\",\n    height: RFValue(200),\n    borderTopLeftRadius: RFValue(20),\n    borderTopRightRadius: RFValue(20),\n    resizeMode: \"contain\"\n  },\n  dataContainer: {\n    flexDirection: \"row\",\n    padding: RFValue(20)\n  },\n  titleTextContainer: {\n    flex: 0.8\n  },\n  storyTitleText: {\n    fontFamily: \"Bubblegum-Sans\",\n    fontSize: RFValue(25),\n    color: \"white\"\n  },\n  storyAuthorText: {\n    fontFamily: \"Bubblegum-Sans\",\n    fontSize: RFValue(18),\n    color: \"white\"\n  },\n  iconContainer: {\n    flex: 0.2\n  },\n  storyTextContainer: {\n    padding: RFValue(20)\n  },\n  storyText: {\n    fontFamily: \"Bubblegum-Sans\",\n    fontSize: RFValue(15),\n    color: \"white\"\n  },\n  moralText: {\n    fontFamily: \"Bubblegum-Sans\",\n    fontSize: RFValue(20),\n    color: \"white\"\n  },\n  actionContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: RFValue(10)\n  },\n  likeButton: {\n    width: RFValue(160),\n    height: RFValue(40),\n    flexDirection: \"row\",\n    backgroundColor: \"#eb3948\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: RFValue(30)\n  },\n  likeText: {\n    color: \"white\",\n    fontFamily: \"Bubblegum-Sans\",\n    fontSize: RFValue(25),\n    marginLeft: RFValue(5)\n  }\n});","map":{"version":3,"sources":["C:/Users/Hrithik/Documents/ST-84-Boilerplate/screens/StoryScreen.js"],"names":["React","Component","Ionicons","RFValue","AppLoading","Font","Speech","customFonts","require","StoryScreen","props","state","fontsLoaded","speakerColor","speakerIcon","loadAsync","setState","_loadFontsAsync","title","author","story","moral","current_color","speak","route","params","navigation","navigate","styles","container","droidSafeArea","appTitle","appIcon","iconImage","appTitleTextContainer","appTitleText","storyContainer","storyCard","image","dataContainer","titleTextContainer","storyTitleText","storyAuthorText","created_on","iconContainer","margin","storyTextContainer","storyText","moralText","actionContainer","likeButton","likeText","StyleSheet","create","flex","backgroundColor","marginTop","Platform","OS","StatusBar","currentHeight","flexDirection","justifyContent","alignItems","width","height","resizeMode","color","fontSize","fontFamily","borderRadius","alignSelf","borderTopLeftRadius","borderTopRightRadius","padding","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  SafeAreaView,\r\n  Platform,\r\n  StatusBar,\r\n  Image,\r\n  ScrollView,\r\n  Dimensions\r\n} from \"react-native\";\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\n\r\nimport AppLoading from \"expo-app-loading\";\r\nimport * as Font from \"expo-font\";\r\nimport * as Speech from 'expo-speech';\r\n\r\nlet customFonts = {\r\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\r\n};\r\n\r\nexport default class StoryScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fontsLoaded: false,\r\n      speakerColor: \"gray\",\r\n      speakerIcon: \"volume-high-outline\"\r\n    };\r\n  }\r\n\r\n  async _loadFontsAsync() {\r\n    await Font.loadAsync(customFonts);\r\n    this.setState({ fontsLoaded: true });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._loadFontsAsync();\r\n  }\r\n\r\n  async initiateTTS (title,author,story,moral){\r\n    const current_color = this.state.speakerColor;\r\n    this.setState({\r\n      speakerColor : current_color === \"gray\" ? \"tomato-red\" : \"gray\"\r\n    });\r\n    if(current_color === \"gray\"){\r\n      Speech.speak(`${title} by ${author}`);\r\n      Speech.speak(story);\r\n      Speech.speak(``)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.route.params) {\r\n      this.props.navigation.navigate(\"Home\");\r\n    } else if (!this.state.fontsLoaded) {\r\n      return <AppLoading />;\r\n    } else {\r\n      return (\r\n        <View style={styles.container}>\r\n          <SafeAreaView style={styles.droidSafeArea} />\r\n          <View style={styles.appTitle}>\r\n            <View style={styles.appIcon}>\r\n              <Image\r\n                source={require(\"../assets/logo.png\")}\r\n                style={styles.iconImage}\r\n              ></Image>\r\n            </View>\r\n            <View style={styles.appTitleTextContainer}>\r\n              <Text style={styles.appTitleText}>Storytelling App</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.storyContainer}>\r\n            <ScrollView style={styles.storyCard}>\r\n              <Image\r\n                source={require(\"../assets/story_image_1.png\")}\r\n                style={styles.image}\r\n              ></Image>\r\n\r\n              <View style={styles.dataContainer}>\r\n                <View style={styles.titleTextContainer}>\r\n                  <Text style={styles.storyTitleText}>\r\n                    {this.props.route.params.story.title}\r\n                  </Text>\r\n                  <Text style={styles.storyAuthorText}>\r\n                    {this.props.route.params.story.author}\r\n                  </Text>\r\n                  <Text style={styles.storyAuthorText}>\r\n                    {this.props.route.params.story.created_on}\r\n                  </Text>\r\n                </View>\r\n                <View style={styles.iconContainer}>\r\n                <TouchableOpacity>\r\n                  <Ionicons\r\n                    name={this.state.speakerIcon}\r\n                    size={RFValue(30)}\r\n                    color={this.state.speakerColor}\r\n                    style={{ margin: RFValue(15) }}\r\n                  />\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n              <View style={styles.storyTextContainer}>\r\n                <Text style={styles.storyText}>\r\n                  {this.props.route.params.story.story}\r\n                </Text>\r\n                <Text style={styles.moralText}>\r\n                  Moral - {this.props.route.params.story.moral}\r\n                </Text>\r\n              </View>\r\n              <View style={styles.actionContainer}>\r\n                <View style={styles.likeButton}>\r\n                  <Ionicons name={\"heart\"} size={RFValue(30)} color={\"white\"} />\r\n                  <Text style={styles.likeText}>12k</Text>\r\n                </View>\r\n              </View>\r\n            </ScrollView>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#15193c\"\r\n  },\r\n  droidSafeArea: {\r\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\r\n  },\r\n  appTitle: {\r\n    flex: 0.07,\r\n    flexDirection: \"row\"\r\n  },\r\n  appIcon: {\r\n    flex: 0.3,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  iconImage: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    resizeMode: \"contain\"\r\n  },\r\n  appTitleTextContainer: {\r\n    flex: 0.7,\r\n    justifyContent: \"center\"\r\n  },\r\n  appTitleText: {\r\n    color: \"white\",\r\n    fontSize: RFValue(28),\r\n    fontFamily: \"Bubblegum-Sans\"\r\n  },\r\n  storyContainer: {\r\n    flex: 1\r\n  },\r\n  storyCard: {\r\n    margin: RFValue(20),\r\n    backgroundColor: \"#2f345d\",\r\n    borderRadius: RFValue(20)\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    alignSelf: \"center\",\r\n    height: RFValue(200),\r\n    borderTopLeftRadius: RFValue(20),\r\n    borderTopRightRadius: RFValue(20),\r\n    resizeMode: \"contain\"\r\n  },\r\n  dataContainer: {\r\n    flexDirection: \"row\",\r\n    padding: RFValue(20)\r\n  },\r\n  titleTextContainer: {\r\n    flex: 0.8\r\n  },\r\n  storyTitleText: {\r\n    fontFamily: \"Bubblegum-Sans\",\r\n    fontSize: RFValue(25),\r\n    color: \"white\"\r\n  },\r\n  storyAuthorText: {\r\n    fontFamily: \"Bubblegum-Sans\",\r\n    fontSize: RFValue(18),\r\n    color: \"white\"\r\n  },\r\n  iconContainer: {\r\n    flex: 0.2\r\n  },\r\n  storyTextContainer: {\r\n    padding: RFValue(20)\r\n  },\r\n  storyText: {\r\n    fontFamily: \"Bubblegum-Sans\",\r\n    fontSize: RFValue(15),\r\n    color: \"white\"\r\n  },\r\n  moralText: {\r\n    fontFamily: \"Bubblegum-Sans\",\r\n    fontSize: RFValue(20),\r\n    color: \"white\"\r\n  },\r\n  actionContainer: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: RFValue(10)\r\n  },\r\n  likeButton: {\r\n    width: RFValue(160),\r\n    height: RFValue(40),\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#eb3948\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: RFValue(30)\r\n  },\r\n  likeText: {\r\n    color: \"white\",\r\n    fontFamily: \"Bubblegum-Sans\",\r\n    fontSize: RFValue(25),\r\n    marginLeft: RFValue(5)\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}