{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport StoryCard from \"./StoryCard\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar customFonts = {\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\n};\n\nvar stories = require(\"./temp_stories.json\");\n\nvar Feed = function (_Component) {\n  _inherits(Feed, _Component);\n\n  var _super = _createSuper(Feed);\n\n  function Feed(props) {\n    var _this;\n\n    _classCallCheck(this, Feed);\n\n    _this = _super.call(this, props);\n\n    _this.renderItem = function (_ref) {\n      var story = _ref.item;\n      return _jsx(StoryCard, {\n        story: story,\n        navigation: _this.props.navigation\n      });\n    };\n\n    _this.keyExtractor = function (item, index) {\n      return index.toString();\n    };\n\n    _this.state = {\n      fontsLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(Feed, [{\n    key: \"_loadFontsAsync\",\n    value: function _loadFontsAsync() {\n      return _regeneratorRuntime.async(function _loadFontsAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync(customFonts));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._loadFontsAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.fontsLoaded) {\n        return _jsx(AppLoading, {});\n      } else {\n        return _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(SafeAreaView, {\n            style: styles.droidSafeArea\n          }), _jsxs(View, {\n            style: styles.appTitle,\n            children: [_jsx(View, {\n              style: styles.appIcon,\n              children: _jsx(Image, {\n                source: require(\"../assets/logo.png\"),\n                style: styles.iconImage\n              })\n            }), _jsx(View, {\n              style: styles.appTitleTextContainer,\n              children: _jsx(Text, {\n                style: styles.appTitleText,\n                children: \"Storytelling App\"\n              })\n            })]\n          }), _jsx(View, {\n            style: styles.cardContainer,\n            children: _jsx(FlatList, {\n              keyExtractor: this.keyExtractor,\n              data: stories,\n              renderItem: this.renderItem\n            })\n          }), _jsx(View, {\n            style: {\n              flex: 0.08\n            }\n          })]\n        });\n      }\n    }\n  }]);\n\n  return Feed;\n}(Component);\n\nexport { Feed as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#15193c\"\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\n  },\n  appTitle: {\n    flex: 0.07,\n    flexDirection: \"row\"\n  },\n  appIcon: {\n    flex: 0.3,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  iconImage: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  appTitleTextContainer: {\n    flex: 0.7,\n    justifyContent: \"center\"\n  },\n  appTitleText: {\n    color: \"white\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  cardContainer: {\n    flex: 0.85\n  }\n});","map":{"version":3,"sources":["C:/Users/Hrithik/Documents/ST-84-Boilerplate/screens/Feed.js"],"names":["React","Component","RFValue","StoryCard","AppLoading","Font","customFonts","require","stories","Feed","props","renderItem","story","item","navigation","keyExtractor","index","toString","state","fontsLoaded","loadAsync","setState","_loadFontsAsync","styles","container","droidSafeArea","appTitle","appIcon","iconImage","appTitleTextContainer","appTitleText","cardContainer","flex","StyleSheet","create","backgroundColor","marginTop","Platform","OS","StatusBar","currentHeight","flexDirection","justifyContent","alignItems","width","height","resizeMode","color","fontSize","fontFamily"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  Platform,\r\n  StatusBar,\r\n  Image,\r\n  FlatList \r\n} from \"react-native\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\nimport StoryCard from \"./StoryCard\";\r\n\r\nimport AppLoading from \"expo-app-loading\";\r\nimport * as Font from \"expo-font\";\r\n\r\nlet customFonts = {\r\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\r\n};\r\n\r\nlet stories = require(\"./temp_stories.json\");\r\n\r\nexport default class Feed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fontsLoaded: false\r\n    };\r\n  }\r\n\r\n  async _loadFontsAsync() {\r\n    await Font.loadAsync(customFonts);\r\n    this.setState({ fontsLoaded: true });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._loadFontsAsync();\r\n  }\r\n\r\n  renderItem = ({ item: story }) => {\r\n    return <StoryCard story={story} navigation={this.props.navigation} />;\r\n  };\r\n\r\n  keyExtractor = (item, index) => index.toString();\r\n\r\n  render() {\r\n    if (!this.state.fontsLoaded) {\r\n      return <AppLoading />;\r\n    } else {\r\n      return (\r\n        <View style={styles.container}>\r\n          <SafeAreaView style={styles.droidSafeArea} />\r\n          <View style={styles.appTitle}>\r\n            <View style={styles.appIcon}>\r\n              <Image\r\n                source={require(\"../assets/logo.png\")}\r\n                style={styles.iconImage}\r\n              ></Image>\r\n            </View>\r\n            <View style={styles.appTitleTextContainer}>\r\n              <Text style={styles.appTitleText}>Storytelling App</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.cardContainer}>\r\n            <FlatList\r\n              keyExtractor={this.keyExtractor}\r\n              data={stories}\r\n              renderItem={this.renderItem}\r\n            />\r\n          </View>\r\n          <View style={{ flex: 0.08 }} />\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#15193c\"\r\n  },\r\n  droidSafeArea: {\r\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\r\n  },\r\n  appTitle: {\r\n    flex: 0.07,\r\n    flexDirection: \"row\"\r\n  },\r\n  appIcon: {\r\n    flex: 0.3,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  iconImage: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    resizeMode: \"contain\"\r\n  },\r\n  appTitleTextContainer: {\r\n    flex: 0.7,\r\n    justifyContent: \"center\"\r\n  },\r\n  appTitleText: {\r\n    color: \"white\",\r\n    fontSize: RFValue(28),\r\n    fontFamily: \"Bubblegum-Sans\"\r\n  },\r\n  cardContainer: {\r\n    flex: 0.85\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}